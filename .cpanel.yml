# Lightning-Fast cPanel Deployment
# Optimized for speed - under 2 minutes

---
deployment:
  tasks:
    # Instant setup
    - export DEPLOYPATH=/home2/shemidig/parish_system/
    
    # Copy only changed files (fastest method)
    - rsync -av --delete --exclude='.git' --exclude='node_modules' --exclude='storage/logs' . $DEPLOYPATH/
    
    # Essential permissions only
    - chmod -R 755 $DEPLOYPATH && chmod -R 777 $DEPLOYPATH/storage $DEPLOYPATH/bootstrap/cache
    
    # Minimal Laravel setup
    - |
      cd $DEPLOYPATH
      [ ! -f .env ] && cp .env.example .env 2>/dev/null
      /usr/local/bin/ea-php82 artisan config:clear
      /usr/local/bin/ea-php82 artisan migrate --force
      echo "✅ Deployed in under 2 minutes!"
        }
        
        # Seed essential system data
        echo "🌱 Seeding essential system data..."
        
        # Roles and permissions (critical for system operation)
        if $PHP_PATH artisan db:seed --class=RolePermissionSeeder --force --no-interaction 2>/dev/null; then
          echo "✅ Roles and permissions seeded"
        else
          echo "ℹ️  Roles/permissions already exist or seeder unavailable"
        fi
        
        # Production configuration and admin user
        if $PHP_PATH artisan db:seed --class=ProductionSeeder --force --no-interaction 2>/dev/null; then
          echo "✅ Production configuration seeded"
        else
          echo "ℹ️  Production data already exists or seeder unavailable"
        fi
        
        # Complete database seeding (optional)
        if $PHP_PATH artisan db:seed --force --no-interaction 2>/dev/null; then
          echo "✅ Complete database seeding successful"
        else
          echo "ℹ️  Database already seeded or no additional seeders"
        fi
        
      else
        echo "⏭️ Skipping database operations due to connection issues"
        echo "🛠️  Manual setup required after fixing database connection"
      fi

    # Step 10: Laravel production optimization
    - echo "⚡ Applying production optimizations..."
    - |
      cd $DEPLOYPATH
      
      # Create storage symlink
      $PHP_PATH artisan storage:link --no-interaction 2>/dev/null || echo "ℹ️ Storage link already exists"
      
      # Cache configurations for production performance
      $PHP_PATH artisan config:cache --no-interaction 2>/dev/null || echo "⚠️ Config cache failed"
      $PHP_PATH artisan route:cache --no-interaction 2>/dev/null || echo "⚠️ Route cache failed"
      $PHP_PATH artisan view:cache --no-interaction 2>/dev/null || echo "⚠️ View cache failed"
      
      echo "✅ Production optimizations applied"

    # Step 11: Final verification and security
    - echo "🔐 Final security and system verification..."
    - |
      cd $DEPLOYPATH
      
      # Final security settings
      [ -f .env ] && chmod 600 .env
      
      # Verify Laravel is functional
      LARAVEL_CHECK=$($PHP_PATH artisan --version 2>&1)
      if echo "$LARAVEL_CHECK" | grep -q "Laravel Framework"; then
        echo ""
        echo "🎉 DEPLOYMENT SUCCESSFUL!"
        echo "==============================================="
        echo "🌐 Parish Management System is now live at:"
        echo "   👉 http://parish.quovadisyouthhub.org/"
        echo ""
        echo "✅ Deployment Summary:"
        echo "   📊 Laravel Version: $LARAVEL_CHECK"
        echo "   🗄️  Database: $([ "$DB_CONNECTED" = "true" ] && echo "✅ Connected" || echo "❌ Connection Failed")"
        echo "   🔧 Seeders: $([ "$DB_CONNECTED" = "true" ] && echo "✅ Executed" || echo "⏭️ Skipped")"
        echo "   ⚡ Optimizations: ✅ Applied"
        echo ""
        if [ "$DB_CONNECTED" = "true" ]; then
          echo "🚀 System Ready! You can now:"
          echo "   1. 👤 Log in with your admin credentials"
          echo "   2. ✅ Test all system features"
          echo "   3. 📊 Verify reports and data integrity"
        else
          echo "⚠️  Database Setup Required:"
          echo "   1. 🔧 Fix database connection in .env"
          echo "   2. 🏃 Run: $PHP_PATH artisan migrate --force"
          echo "   3. 🌱 Run: $PHP_PATH artisan db:seed --force"
        fi
        echo ""
        echo "🔧 Useful Commands:"
        echo "   Clear cache: $PHP_PATH artisan cache:clear"
        echo "   Re-run seeders: $PHP_PATH artisan db:seed --force"
        echo "   Check status: $PHP_PATH artisan --version"
        echo ""
        echo "📅 Deployment completed at: $(date)"
        echo "==============================================="
      else
        echo ""
        echo "⚠️ DEPLOYMENT WARNING"
        echo "============================="
        echo "Files copied but Laravel verification failed:"
        echo "$LARAVEL_CHECK"
        echo ""
        echo "🛠️  Troubleshooting steps:"
        echo "   1. Check file permissions"
        echo "   2. Verify .env configuration"
        echo "   3. Run manual Laravel commands"
        echo "============================="
      fi