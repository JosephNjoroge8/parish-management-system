# Optimized cPanel Deployment Configuration
# Fast and reliable deployment for Parish Management System
# Documentation: https://docs.cpanel.net/knowledge-base/web-services/guide-to-git-deployment/

---
deployment:
  tasks:
    # Step 1: Initialize deployment path
    - export DEPLOYPATH=/home2/shemidig/parish_system/
    - echo "🚀 Starting deployment to $DEPLOYPATH"
    
    # Step 2: Fast bulk copy (much faster than individual file copies)
    - echo "📁 Copying application files..."
    - /bin/cp -R . $DEPLOYPATH/ 2>/dev/null || true
    
    # Step 3: Remove git files from deployment (security & space)
    - /bin/rm -rf $DEPLOYPATH/.git
    - /bin/rm -f $DEPLOYPATH/.gitignore
    - echo "🗑️ Git files removed from deployment"
    
    # Step 4: Essential file permissions (fast approach)
    - echo "🔒 Setting essential permissions..."
    - chmod -R 755 $DEPLOYPATH
    - chmod -R 777 $DEPLOYPATH/storage $DEPLOYPATH/bootstrap/cache 2>/dev/null || true
    
    # Step 5: Environment check and Laravel setup
    - echo "⚙️ Setting up Laravel environment..."
    - |
      cd $DEPLOYPATH
      if [ ! -f .env ]; then
        if [ -f .env.example ]; then
          cp .env.example .env
          echo "📋 Created .env from template - EDIT WITH YOUR DATABASE CREDENTIALS!"
        else
          echo "❌ ERROR: No .env or .env.example found!"
          exit 1
        fi
      else
        echo "✅ .env file exists"
      fi
    
    # Step 6: Laravel optimization (essential commands only)
    - echo "🚀 Optimizing Laravel..."
    - |
      cd $DEPLOYPATH
      
      # Generate app key if needed
      /usr/local/bin/ea-php82 artisan key:generate --force --no-interaction || echo "Key generation skipped"
      
      # Clear caches (fast)
      /usr/local/bin/ea-php82 artisan config:clear --no-interaction || true
      /usr/local/bin/ea-php82 artisan cache:clear --no-interaction || true
      
      # Run migrations (with timeout protection)
      timeout 60 /usr/local/bin/ea-php82 artisan migrate --force --no-interaction || echo "Migration timeout/error - check manually"
      
      # Run all seeders after migration
      /usr/local/bin/ea-php82 artisan db:seed --force --no-interaction || echo "Seeder execution failed - check manually"
      
      # Create storage link
      /usr/local/bin/ea-php82 artisan storage:link --no-interaction || true
      
      # Production optimization
      /usr/local/bin/ea-php82 artisan config:cache --no-interaction || true
      /usr/local/bin/ea-php82 artisan route:cache --no-interaction || true
      
      echo "✅ Laravel setup completed"

    # Step 7: Final security and verification
    - echo "🔐 Final security settings..."
    - |
      cd $DEPLOYPATH
      
      # Secure .env file
      [ -f .env ] && chmod 600 .env
      
      # Remove any development files that might have been copied
      rm -f debug_*.php test_*.php *.log 2>/dev/null || true
      
      # Verify Laravel is working
      if /usr/local/bin/ea-php82 artisan --version >/dev/null 2>&1; then
        echo "🎉 Parish Management System Deployed Successfully!"
        echo "🌐 Access your system at: http://parish.quovadisyouthhub.org/"
        echo "📝 Remember to verify your .env database settings!"
      else
        echo "⚠️ Deployment completed but Laravel check failed - verify manually"
      fi
        }
        
        # Seed essential system data
        echo "🌱 Seeding essential system data..."
        
        # Roles and permissions (critical for system operation)
        if $PHP_PATH artisan db:seed --class=RolePermissionSeeder --force --no-interaction 2>/dev/null; then
          echo "✅ Roles and permissions seeded"
        else
          echo "ℹ️  Roles/permissions already exist or seeder unavailable"
        fi
        
        # Production configuration and admin user
        if $PHP_PATH artisan db:seed --class=ProductionSeeder --force --no-interaction 2>/dev/null; then
          echo "✅ Production configuration seeded"
        else
          echo "ℹ️  Production data already exists or seeder unavailable"
        fi
        
        # Complete database seeding (optional)
        if $PHP_PATH artisan db:seed --force --no-interaction 2>/dev/null; then
          echo "✅ Complete database seeding successful"
        else
          echo "ℹ️  Database already seeded or no additional seeders"
        fi
        
      else
        echo "⏭️ Skipping database operations due to connection issues"
        echo "🛠️  Manual setup required after fixing database connection"
      fi

    # Step 10: Laravel production optimization
    - echo "⚡ Applying production optimizations..."
    - |
      cd $DEPLOYPATH
      
      # Create storage symlink
      $PHP_PATH artisan storage:link --no-interaction 2>/dev/null || echo "ℹ️ Storage link already exists"
      
      # Cache configurations for production performance
      $PHP_PATH artisan config:cache --no-interaction 2>/dev/null || echo "⚠️ Config cache failed"
      $PHP_PATH artisan route:cache --no-interaction 2>/dev/null || echo "⚠️ Route cache failed"
      $PHP_PATH artisan view:cache --no-interaction 2>/dev/null || echo "⚠️ View cache failed"
      
      echo "✅ Production optimizations applied"

    # Step 11: Final verification and security
    - echo "🔐 Final security and system verification..."
    - |
      cd $DEPLOYPATH
      
      # Final security settings
      [ -f .env ] && chmod 600 .env
      
      # Verify Laravel is functional
      LARAVEL_CHECK=$($PHP_PATH artisan --version 2>&1)
      if echo "$LARAVEL_CHECK" | grep -q "Laravel Framework"; then
        echo ""
        echo "🎉 DEPLOYMENT SUCCESSFUL!"
        echo "==============================================="
        echo "🌐 Parish Management System is now live at:"
        echo "   👉 http://parish.quovadisyouthhub.org/"
        echo ""
        echo "✅ Deployment Summary:"
        echo "   📊 Laravel Version: $LARAVEL_CHECK"
        echo "   🗄️  Database: $([ "$DB_CONNECTED" = "true" ] && echo "✅ Connected" || echo "❌ Connection Failed")"
        echo "   🔧 Seeders: $([ "$DB_CONNECTED" = "true" ] && echo "✅ Executed" || echo "⏭️ Skipped")"
        echo "   ⚡ Optimizations: ✅ Applied"
        echo ""
        if [ "$DB_CONNECTED" = "true" ]; then
          echo "🚀 System Ready! You can now:"
          echo "   1. 👤 Log in with your admin credentials"
          echo "   2. ✅ Test all system features"
          echo "   3. 📊 Verify reports and data integrity"
        else
          echo "⚠️  Database Setup Required:"
          echo "   1. 🔧 Fix database connection in .env"
          echo "   2. 🏃 Run: $PHP_PATH artisan migrate --force"
          echo "   3. 🌱 Run: $PHP_PATH artisan db:seed --force"
        fi
        echo ""
        echo "🔧 Useful Commands:"
        echo "   Clear cache: $PHP_PATH artisan cache:clear"
        echo "   Re-run seeders: $PHP_PATH artisan db:seed --force"
        echo "   Check status: $PHP_PATH artisan --version"
        echo ""
        echo "📅 Deployment completed at: $(date)"
        echo "==============================================="
      else
        echo ""
        echo "⚠️ DEPLOYMENT WARNING"
        echo "============================="
        echo "Files copied but Laravel verification failed:"
        echo "$LARAVEL_CHECK"
        echo ""
        echo "🛠️  Troubleshooting steps:"
        echo "   1. Check file permissions"
        echo "   2. Verify .env configuration"
        echo "   3. Run manual Laravel commands"
        echo "============================="
      fi